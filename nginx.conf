# HTTP 服务器 - 仅处理重定向
server {
    listen 80;
    listen [::]:80;
    server_name photosong.com www.photosong.com;
    
    # 宝塔面板强制 HTTPS 标记
    #REWRITE-START
    
    # Cloudflare 真实 IP
    set_real_ip_from 103.21.244.0/22;
    set_real_ip_from 103.22.200.0/22;
    set_real_ip_from 103.31.4.0/22;
    set_real_ip_from 104.16.0.0/13;
    set_real_ip_from 104.24.0.0/14;
    set_real_ip_from 108.162.192.0/18;
    set_real_ip_from 131.0.72.0/22;
    set_real_ip_from 141.101.64.0/18;
    set_real_ip_from 162.158.0.0/15;
    set_real_ip_from 172.64.0.0/13;
    set_real_ip_from 173.245.48.0/20;
    set_real_ip_from 188.114.96.0/20;
    set_real_ip_from 190.93.240.0/20;
    set_real_ip_from 197.234.240.0/22;
    set_real_ip_from 198.41.128.0/17;
    set_real_ip_from 2400:cb00::/32;
    set_real_ip_from 2606:4700::/32;
    set_real_ip_from 2803:f800::/32;
    set_real_ip_from 2405:b500::/32;
    set_real_ip_from 2405:8100::/32;
    set_real_ip_from 2c0f:f248::/32;
    set_real_ip_from 2a06:98c0::/29;
    
    real_ip_header CF-Connecting-IP;
    
    # 强制 HTTPS 重定向
    if ($server_port !~ 443){
        rewrite ^(/.*)$ https://$host$1 permanent;
    }
    
    #REWRITE-END
    
    return 301 https://$host$request_uri;
}

# 定义上游服务器
upstream backend_servers {
    server 127.0.0.1:3000;
    keepalive 32;
}

# HTTPS 服务器
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name photosong.com www.photosong.com;
    
    root /www/wwwroot/photosong.com/dist;
    index index.html;
    
    # SSL 配置 - 使用宝塔面板的证书路径
    ssl_certificate /www/server/panel/vhost/cert/photosong.com/fullchain.pem;
    ssl_certificate_key /www/server/panel/vhost/cert/photosong.com/privkey.pem;
    
    # 安全相关配置
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;
    
    # HSTS
    add_header Strict-Transport-Security "max-age=31536000" always;
    
    # 其他安全头
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # 禁止访问 . 文件
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # 处理 sitemap
    location = /sitemap_index.xml {
        try_files $uri =404;
    }
    
    # 处理语言路由
    location = /zh {
        return 301 $scheme://$host/zh/;
    }

    location = /en {
        return 301 $scheme://$host/en/;
    }

    # 处理带斜杠的语言路由
    location ~ ^/(zh|en)/(.*)$ {
        try_files $uri $uri/ /index.html last;
    }

    # favicon 处理
    location = /favicon.ico {
        try_files $uri =404;
        access_log off;
        log_not_found off;
    }

    # 主要位置块
    location / {
        # 设置正确的文件权限
        access_log  /www/wwwlogs/photosong.com.log;
        error_log   /www/wwwlogs/photosong.com.error.log;
        
        # 处理根路径重定向到默认语言
        if ($request_uri = "/") {
            return 301 $scheme://$host/zh/;
        }

        # 先尝试找实际文件
        try_files $uri $uri/ @rewrites;
    }

    # 重写规则
    location @rewrites {
        rewrite ^/(.*)$ /index.html last;
    }

    # 静态文件处理
    location ~* \.(js|css|jpg|jpeg|gif|png|ico|svg|woff|woff2)$ {
        expires 30d;
        add_header Cache-Control "public, no-transform";
        try_files $uri =404;
        access_log off;
        add_header 'Access-Control-Allow-Origin' '*' always;
    }
    
    # 文章路由
    location /articles/ {
        try_files $uri $uri/ /index.html last;
    }
    
    # 社区路由
    location /community/ {
        try_files $uri $uri/ /index.html last;
    }

    # API 路由
    location /api/ {
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # 错误页面
    error_page 404 /index.html;
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }

    # 全局 CORS 设置
    add_header 'Access-Control-Allow-Origin' '*' always;
    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
    add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
    
    # OPTIONS 请求处理
    if ($request_method = 'OPTIONS') {
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
        add_header 'Access-Control-Max-Age' 1728000;
        add_header 'Content-Type' 'text/plain; charset=utf-8';
        add_header 'Content-Length' 0;
        return 204;
    }
}

# 预渲染服务器配置
server {
    listen 80;
    server_name photosong.com;
    root /usr/share/nginx/html;
    index index.html;

    # 启用 gzip 压缩
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml application/json application/javascript application/xml+rss application/atom+xml image/svg+xml;

    # 缓存设置
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|svg)$ {
        expires 7d;
        add_header Cache-Control "public, no-transform";
    }

    # 预渲染页面的缓存设置
    location ~* \.prerender\.html$ {
        expires 1h;
        add_header Cache-Control "public, no-transform";
    }

    # 主要路由处理
    location / {
        # 尝试查找预渲染的 HTML 文件
        try_files $uri $uri.html $uri/index.html /index.html;
        
        # 添加安全相关的响应头
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src 'self' https:; script-src 'self' 'unsafe-inline' 'unsafe-eval' https:; style-src 'self' 'unsafe-inline' https:; img-src 'self' data: https:; font-src 'self' https: data:; connect-src 'self' https:;" always;
        
        # 设置合适的字符集
        charset utf-8;
    }

    # API 代理
    location /api/ {
        proxy_pass http://backend_servers/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # 错误页面处理
    error_page 404 /404.html;
    location = /404.html {
        internal;
    }

    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        internal;
    }
}